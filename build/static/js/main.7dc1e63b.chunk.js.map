{"version":3,"sources":["customBtn.js","imageComp.js","App.js","reportWebVitals.js","index.js"],"names":["CustomBtn","props","state","list","this","map","value","index","React","Component","ImageComp","src","url","alt","altTips","Clock","date","Date","timer","setInterval","tick","clearInterval","setState","e","console","log","toLocaleTimeString","onClick","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"kOA2BeA,E,kDAvBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,KAAM,CAAC,OAAQ,OAAQ,QAFtB,E,qDAOf,OACI,6BAEQC,KAAKF,MAAMC,KAAKE,KAAI,SAACC,EAAOC,GAAR,OAChB,+CAAoBD,IAAXC,Y,GAZTC,IAAMC,WCcfC,E,kDAdX,WAAYT,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,qDAMd,OACI,qBAAKS,IAAKP,KAAKH,MAAMW,IAAKC,IAAKT,KAAKH,MAAMa,c,GAR9BN,IAAMC,WC8EfM,E,kDAlDX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACc,KAAM,IAAIC,MAFT,E,gEAKE,IAAD,OAChBb,KAAKc,MAAQC,aAAY,WACrB,EAAKC,SACN,O,6CAIHC,cAAcjB,KAAKc,S,6BAOnBd,KAAKkB,SAAS,CACVN,KAAM,IAAIC,S,8BAIVD,EAAMO,GACVC,QAAQC,IAAIT,EAAMO,K,+BAGZ,IAAD,OAEL,OACI,gCACI,6CAIA,+CACkBnB,KAAKF,MAAMc,KAAKU,wBAElC,wBAAQC,QAAS,SAACJ,GAAD,OAAO,EAAKI,QAAQ,EAAKzB,MAAMc,KAAMO,IAAtD,0BACA,cAAC,EAAD,CAAWK,KAAK,eAAKD,QAASvB,KAAKuB,UAEnC,cAAC,EAAD,CAAWf,IAAI,eAAeE,QAAU,0C,GA3CpCN,IAAMC,WCjBXoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.7dc1e63b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nclass CustomBtn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {list: [\"lucy\", \"tony\", \"tom\"]};\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <ul>\r\n                {\r\n                    this.state.list.map((value, index) => (\r\n                        <li key={index}>姓名:{value}</li>\r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n\r\n            // <button onClick={this.props.onClick}>{this.props.text}</button>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CustomBtn;","import React from \"react\";\r\n\r\nclass ImageComp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <img src={this.props.url} alt={this.props.altTips}/>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ImageComp;","// import logo from './logo.svg';\n// import './App.css';\nimport React from \"react\";\n\nimport CustomBtn from \"./customBtn\";\n\nimport ImageComp from \"./imageComp\";\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           11111111111\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {date: new Date()};\n    }\n\n    componentDidMount() {\n        this.timer = setInterval(() => {\n            this.tick();\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    tick() {\n        //1不要直接修改state使用setState\n        //2setState可能是异步的，为了性能问题会合并执行,所以不要想着setState之后就刷新状态,可以用回调函数\n        //3state更新会被合并，而不是简单的替换\n        this.setState({\n            date: new Date()\n        })\n    }\n\n    onClick(date, e) {\n        console.log(date, e);\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h1>\n                    hello world\n                </h1>\n\n                <h2>\n                    this time is {this.state.date.toLocaleTimeString()}\n                </h2>\n                <button onClick={(e) => this.onClick(this.state.date, e)}>点击</button>\n                <CustomBtn text=\"点击\" onClick={this.onClick}></CustomBtn>\n\n                <ImageComp url=\"/logo192.png\" altTips = \"未找到图片\"/>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Clock;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}